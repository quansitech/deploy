version: '3.5'

networks:
  backend:
    driver: bridge

services:
    baite:
      image: 镜像地址 test
      container_name: test
      #这里可以根据源码是否含有Uploads决定是否要执行删除操作
      command: sh -c "php /var/www/项目名/artisan migrate --force && rm -rf /var/www/项目名/www/Uploads && ln -s /mnt/docker-script/web/Uploads /var/www/项目名/www/Uploads"
      volumes:
        - ./web/.env:/var/www/项目名/.env
        #上传文件需要持久化，必须和代码分开，采用软连接的方式，可避免在清空源码时导致的docker 映射文件的inode丢失，避免docker重启
        - ./web/Uploads:/mnt/docker-script/web/Uploads  
      networks:
        - backend

    mysql:
      image: 镜像地址 mysql:5.7
      container_name: mysql
      restart: always
      environment:
        - MYSQL_DATABASE=default
        - MYSQL_USER=test
        - MYSQL_PASSWORD=secret
        - MYSQL_ROOT_PASSWORD=root
      volumes:
        - ./mysql-data:/var/lib/mysql
      ports:
        - "3306:3306"
      networks:
        - backend

    php-fpm:
      image: 镜像地址 php-fpm:7.2
      container_name: php-fpm
      user: 1000:1000
      restart: always
      volumes:
        - /mnt/www:/var/www #/mnt/www 为源码从容器copy出来后存放在宿主机上的路径
        - ./php-fpm/conf.d/php-fpm.ini:/usr/local/etc/php/conf.d/php-fpm.ini
        - ./web:/mnt/docker-script/web #持久化文件存放目录
      ports:
        - "9000:9000"
      networks:
        - backend

    nginx:
      image: 镜像地址 nginx
      container_name: nginx
      restart: always
      volumes:
        - ./nginx/sites:/etc/nginx/sites-available
        - ./nginx/ssl:/etc/nginx/ssl
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        - /mnt/www:/var/www #/var/www 为源码从容器copy出来后存放在宿主机上的路径
        - ./web:/mnt/docker-script/web #持久化文件存放目录
      ports:
        - "80:80"
        - "443:443"
      depends_on:
        - php-fpm
      networks:
        - backend
